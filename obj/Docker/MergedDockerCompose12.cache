name: dockercompose5321709021174949347
services:
  mongo:
    container_name: mongodb
    image: mongo:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongodata
        target: /data/db
        volume: {}
  mongodbdocker:
    build:
      context: D:\Microservice Project\New folder\MongoDbDocker
      dockerfile: ./MongoDbDocker/Dockerfile
    depends_on:
      mongo:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_HTTPS_PORTS: "5001"
      DatabaseSettings__CollectionName: Person
      DatabaseSettings__ConnectionString: mongodb://root:example@mongo:27017/
      DatabaseSettings__Database: People
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_ROOT_USERNAME: root
    image: mongodbdocker
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 5001
        published: "5001"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mdrif\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mdrif\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose5321709021174949347_default
volumes:
  mongodata:
    name: dockercompose5321709021174949347_mongodata
    driver: local